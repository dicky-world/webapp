{"version":3,"sources":["globalState.tsx","components/footer.tsx","components/error.tsx","components/forgot.tsx","components/join.tsx","components/login.tsx","components/resetpassword.tsx","components/resetsent.tsx","components/modal.tsx","components/sideNav.tsx","components/topNav.tsx","components/warning.tsx","components/layout.tsx","routes/confirmEmail.tsx","routes/home.tsx","routes/my/password.tsx","routes/my/preferences.tsx","components/cover.tsx","routes/my/profile.tsx","components/photo.tsx","routes/my/settings.tsx","routes/notFound.tsx","routes/resetPassword.tsx","serviceWorker.ts","index.tsx","Router.tsx","images/loading.svg"],"names":["localShared","Dispatch","createContext","dispatch","action","savedData","localStorage","getItem","JSON","parse","InitialState","display","modal","env","apiUrl","imgUrl","shared","avatarId","bio","country","coverId","currency","dob","email","fullName","gender","language","location","loggedIn","username","warningMessage","webSite","Global","global","SET_SHARED","Reducer","state","type","setItem","stringify","value","avatar","Footer","Error","props","Fragment","error","CSSTransition","appear","classNames","in","timeout","className","Forgot","useContext","useState","apiError","emailError","loading","password","passwordError","setState","callApi","a","prev","fetch","body","headers","method","response","json","content","status","validate","id","test","onSubmit","event","preventDefault","onBlur","target","onChange","persist","placeholder","onClick","color","src","loadingImg","alt","Join","fullNameError","jwtToken","window","href","fullNameValidation","emailValidation","passwordValidation","maxLength","to","pathname","Login","Resetpassword","resetCode","newPassword","removeItem","Resetsent","setTimeout","Modal","stopPropagation","screen","unmountOnExit","SideNav","second","split","TopNav","firstName","initial","charAt","toLowerCase","imagePath","dropDownStatus","login","join","logOut","clear","dropDown","onclick","buttons","Warning","messageKey","console","log","displayText","message","TransitionGroup","key","Layout","useEffect","path","reveal","first","includes","layout","children","ConfirmEmail","confirmationCode","match","params","history","push","checkConfirmationCode","Home","Password","confirmPassword","confirmPasswordError","currentPassword","currentPasswordError","newPasswordError","name","length","confirmPasswordValidation","currentPasswordValidation","newPasswordValidation","autoFocus","Preferences","Cover","imageURL","isMe","divStyle","background","backgroundColor","backgroundSize","height","overflow","width","uploadImg","resizedBlob","signedUrl","response2","url","saveImg","response3","content3","dataURLToBlob","dataURL","indexOf","theParts","theContentType","theRaw","Blob","parts","contentType","raw","atob","rawLength","uInt8Array","Uint8Array","i","charCodeAt","style","accept","currentTarget","files","file","reader","FileReader","onload","readerEvent","image","Image","imageEvent","canvas","document","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","base64","toDataURL","blob","URL","createObjectURL","readAsDataURL","Profile","profile","replace","resizeTo","Photo","maxSize","Settings","Date","dobDay","getDate","dobMonth","getMonth","dobYear","getFullYear","bioError","day","toString","dobError","month","usernameError","webSiteError","year","emailChanged","webSiteValidation","bioValidation","disabled","checked","NotFound","ResetPassword","resetPassword","Boolean","hostname","ReactDOM","render","useReducer","Provider","exact","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4B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","file":"static/js/main.09b553ae.chunk.js","sourcesContent":["import { createContext } from 'react';\n\ninterface StateInterface {\n  display: {\n    modal: string;\n  };\n  env: {\n    apiUrl: string;\n    imgUrl: string;\n  };\n  shared: {\n    avatarId: string;\n    bio: string;\n    country: string;\n    coverId: string;\n    currency: string;\n    dob: string;\n    email: string;\n    fullName: string;\n    gender: string;\n    language: string;\n    location: string;\n    loggedIn: boolean;\n    username: string;\n    warningMessage: string;\n    webSite: string;\n  };\n}\n\ninterface ActionInterface {\n  type: string;\n  value: string | boolean;\n}\n\nconst Dispatch = createContext({\n  dispatch: (action: ActionInterface) => {\n    //\n  },\n});\n\nlet localShared;\nconst savedData = localStorage.getItem('shared');\nif (savedData) localShared = JSON.parse(savedData);\n\nconst InitialState: StateInterface = {\n  display: {\n    modal: '',\n  },\n  env: {\n    apiUrl:\n      process.env.NODE_ENV === 'production'\n        ? 'https://api.dicky.world'\n        : 'http://localhost:8888',\n    imgUrl: 'https://s3-eu-west-1.amazonaws.com/img.dicky.world/',\n  },\n  shared: localShared || {\n    avatarId: '',\n    bio: '',\n    country: '',\n    coverId: '',\n    currency: 'USD',\n    dob: '2011-04-11',\n    email: '',\n    fullName: '',\n    gender: 'other',\n    language: 'en',\n    location: '',\n    loggedIn: false,\n    username: '',\n    warningMessage: '',\n    webSite: '',\n  },\n};\n\nconst Global = createContext({\n  global: InitialState,\n});\n\nconst LOGGED_IN = 'LOGGED_IN';\nconst SET_AVATAR = 'SET_AVATAR';\nconst SET_EMAIL = 'SET_EMAIL';\nconst SET_FULLNAME = 'SET_FULLNAME';\nconst SET_MODAL = 'SET_MODAL';\nconst SET_SHARED = 'SET_SHARED';\nconst WARNING_MESSAGE = 'WARNING_MESSAGE';\n\n// tslint:disable-next-line: no-any\nconst Reducer = (state: StateInterface, action: any) => {\n  switch (action.type) {\n    case 'SET_SHARED':\n      localStorage.setItem('shared', JSON.stringify(action.value));\n      return {\n        ...state,\n        display: { ...state.display, modal: '' },\n        shared: action.value,\n      };\n    case 'SET_AVATAR':\n      return {\n        ...state,\n        shared: { ...state.shared, avatar: action.value },\n      };\n    case 'SET_EMAIL':\n      return {\n        ...state,\n        shared: { ...state.shared, email: action.value },\n      };\n    case 'SET_FULLNAME':\n      return {\n        ...state,\n        shared: { ...state.shared, fullName: action.value },\n      };\n    case 'SET_MODAL':\n      return {\n        ...state,\n        display: { ...state.display, modal: action.value },\n      };\n    case 'WARNING_MESSAGE':\n      return {\n        ...state,\n        shared: { ...state.shared, warningMessage: action.value },\n      };\n    case 'LOGGED_IN':\n      return {\n        ...state,\n        shared: { ...state.shared, loggedIn: action.value, warningMessage: ''},\n      };\n    default:\n      return state;\n  }\n};\n\nexport {\n  Dispatch,\n  Global,\n  InitialState,\n  LOGGED_IN,\n  Reducer,\n  SET_AVATAR,\n  SET_EMAIL,\n  SET_FULLNAME,\n  SET_MODAL,\n  SET_SHARED,\n  WARNING_MESSAGE,\n};\n","import React from 'react';\n\nconst Footer: React.FC = () => {\n  return <footer>Footer</footer>;\n};\n\nexport { Footer };\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\ninterface PropsInterface {\n  error: string;\n}\n\nconst Error: React.FC<PropsInterface> = (props: PropsInterface) => {\n  return (\n    <React.Fragment>\n      {props.error && (\n        <CSSTransition\n          appear={!!props.error}\n          classNames='error'\n          in={!!props.error}\n          timeout={400}\n        >\n          <small className='error'>{props.error}</small>\n        </CSSTransition>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport { Error };\n","import React, { ChangeEvent, useContext, useState } from 'react';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_MODAL } from '../globalState';\nimport loadingImg from '../images/loading.svg';\nimport { Error } from './error';\n\nconst Forgot: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const [state, setState] = useState({\n    apiError: '',\n    email: '',\n    emailError: '',\n    loading: false,\n    password: '',\n    passwordError: '',\n  });\n\n  const { apiError, email, emailError, passwordError, loading } = state;\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const { id, value } = event.target;\n    if (id === 'email' && emailError) validate('email');\n    if (id === 'password' && passwordError) {\n      validate('password');\n    }\n    setState((prev) => ({ ...prev, [id]: value }));\n  };\n\n  interface PropsInterface {\n    email: string;\n  }\n\n  const callApi = async (props: PropsInterface) => {\n    if (props.email) {\n      setState((prev) => ({ ...prev, loading: true }));\n      const response = await fetch(\n        `${global.env.apiUrl}/login/reset-password`,\n        {\n          body: JSON.stringify({\n            email: props.email,\n          }),\n          headers: {\n            // prettier-ignore\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: 'POST',\n        }\n      );\n      const content = await response.json();\n      if (response.status === 200) {\n        dispatch({ type: SET_MODAL, value: 'resetsent' });\n        setState((prev) => ({ ...prev, loading: false }));\n      } else {\n        setState((prev) => ({ ...prev, apiError: content.error }));\n      }\n    }\n  };\n\n  const justRemembered = () => {\n    dispatch({ type: SET_MODAL, value: 'login' });\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const emailValidation = validate('email');\n    if (emailValidation) {\n      callApi({ email });\n    }\n  };\n\n  const onBlur = (event: ChangeEvent<HTMLInputElement>) => {\n    validate(event.target.id);\n  };\n\n  const validate = (id: string) => {\n    if (id === 'email') {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        setState((prev) => ({\n          ...prev,\n          emailError: 'A valid email address is required.',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, emailError: '' }));\n        return true;\n      }\n    }\n  };\n\n  return (\n    <div className='forgot'>\n      <h2>Forgot password</h2>\n      <h3>We will send you an email to reset your password.</h3>\n      <form onSubmit={onSubmit}>\n        {apiError && <div className='error--api'>{apiError}</div>}\n        <label>Email</label>\n        <input\n          className={emailError && 'forgot--error'}\n          id='email'\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Email address'\n          type='text'\n          value={email}\n        />\n        <Error error={emailError} />\n        <small className='forgot--right' onClick={justRemembered}>\n          Just Remebered?\n        </small>\n        <Error error={passwordError} />\n        <button color='primary'>\n          {!loading ? (\n            'Reset Password'\n          ) : (\n            <img src={loadingImg} alt='loadingd' className='loading' />\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport { Forgot };\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_SHARED } from '../globalState';\nimport loadingImg from '../images/loading.svg';\nimport { Error } from './error';\n\nconst Join: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const [state, setState] = useState({\n    apiError: '',\n    email: '',\n    emailError: '',\n    fullName: '',\n    fullNameError: '',\n    loading: false,\n    password: '',\n    passwordError: '',\n  });\n\n  const {\n    apiError,\n    email,\n    emailError,\n    fullName,\n    fullNameError,\n    loading,\n    password,\n    passwordError,\n  } = state;\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const { id, value } = event.target;\n    if (id === 'email' && emailError) validate('email');\n    if (id === 'fullName' && fullNameError) {\n      validate('fullName');\n    }\n    if (id === 'password' && passwordError) {\n      validate('password');\n    }\n    setState((prev) => ({ ...prev, [id]: value }));\n  };\n\n  interface PropsInterface {\n    fullName: string;\n    email: string;\n    password: string;\n  }\n\n  const callApi = async (props: PropsInterface) => {\n    if (props.fullName && props.email && props.password) {\n      setState((prev) => ({ ...prev, loading: true }));\n      const response = await fetch(`${global.env.apiUrl}/join`, {\n        body: JSON.stringify({\n          email: props.email,\n          fullName: props.fullName,\n          password: props.password,\n        }),\n        headers: {\n          // prettier-ignore\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n      });\n      const content = await response.json();\n      setState((prev) => ({ ...prev, loading: false }));\n      if (response.status === 200) {\n        localStorage.setItem('jwtToken', content.jwtToken);\n        dispatch({ type: SET_SHARED, value: content.shared });\n        window.location.href = '/my/profile';\n      } else {\n        setState((prev) => ({ ...prev, apiError: content.error }));\n      }\n    }\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const fullNameValidation = validate('fullName');\n    const emailValidation = validate('email');\n    const passwordValidation = validate('password');\n    if (fullNameValidation && emailValidation && passwordValidation) {\n      callApi({\n        email: state.email,\n        fullName: state.fullName,\n        password: state.password,\n      });\n    }\n  };\n\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\n    validate(event.target.id);\n  };\n\n  const validate = (id: string) => {\n    if (id === 'fullName') {\n      if (!/^.{2,}$/.test(fullName)) {\n        setState((prev) => ({\n          ...prev,\n          fullNameError: '2 charectors or longer',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, fullNameError: '' }));\n        return true;\n      }\n    }\n    if (id === 'email') {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        setState((prev) => ({\n          ...prev,\n          emailError: 'A valid email address is required.',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, emailError: '' }));\n        return true;\n      }\n    }\n    if (id === 'password') {\n      if (\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/.test(\n          password\n        )\n      ) {\n        setState((prev) => ({\n          ...prev,\n          passwordError:\n            'Your password must contain at least eight letters, and include a number and an uppercase letter',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, passwordError: '' }));\n        return true;\n      }\n    }\n  };\n\n  return (\n    <div className='join'>\n      <h2>JOIN</h2>\n      <h3>some subheading</h3>\n      <form onSubmit={onSubmit}>\n        {apiError && <div className='error--api'>{apiError}</div>}\n        <label>Name</label>\n        <input\n          className={fullNameError && 'join--error'}\n          id='fullName'\n          maxLength={70}\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Full name'\n          type='text'\n          value={fullName}\n        />\n        <Error error={fullNameError} />\n\n        <label>Email</label>\n        <input\n          className={emailError && 'join--error'}\n          id='email'\n          maxLength={320}\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Email address'\n          type='text'\n          value={email}\n        />\n        <Error error={emailError} />\n        <label>Password</label>\n        <input\n          className={passwordError && 'join--error'}\n          id='password'\n          maxLength={70}\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Create a password'\n          type='password'\n          value={password}\n        />\n        <Error error={passwordError} />\n        <button color='primary'>\n          {!loading ? (\n            'Join Now'\n          ) : (\n            <img src={loadingImg} alt='loading' className='loading' />\n          )}\n        </button>\n        <div className='join--terms'>\n          By joining, you agree to our\n          <Link to={{ pathname: '/terms' }}> Terms of Service</Link> and\n          <Link to={{ pathname: '/terms' }}> Privacy Policy</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport { Join };\n","import React, { ChangeEvent, useContext, useState } from 'react';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_MODAL, SET_SHARED } from '../globalState';\nimport loadingImg from '../images/loading.svg';\nimport { Error } from './error';\n\nconst Login: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const [state, setState] = useState({\n    apiError: '',\n    email: '',\n    emailError: '',\n    loading: false,\n    password: '',\n    passwordError: '',\n  });\n\n  const {\n    apiError,\n    email,\n    emailError,\n    password,\n    passwordError,\n    loading,\n  } = state;\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const { id, value } = event.target;\n    if (id === 'email' && state.emailError) validate('email');\n    if (id === 'password' && state.passwordError) {\n      validate('password');\n    }\n    setState((prev) => ({ ...prev, [id]: value }));\n  };\n\n  interface PropsInterface {\n    email: string;\n    password: string;\n  }\n\n  const callApi = async (props: PropsInterface) => {\n    if (props.email && props.password) {\n      setState((prev) => ({ ...prev, loading: true }));\n      const response = await fetch(`${global.env.apiUrl}/login`, {\n        body: JSON.stringify({\n          email: props.email,\n          password: props.password,\n        }),\n        headers: {\n          // prettier-ignore\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n      });\n      const content = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem('jwtToken', content.jwtToken);\n        dispatch({ type: SET_SHARED, value: content.shared });\n        setState((prev) => ({ ...prev, loading: false }));\n      } else {\n        setState((prev) => ({ ...prev, apiError: content.error }));\n      }\n    }\n  };\n\n  const forgottenPassword = () => {\n    dispatch({ type: SET_MODAL, value: 'forgot' });\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const emailValidation = validate('email');\n    const passwordValidation = validate('password');\n    if (emailValidation && passwordValidation) {\n      callApi({ email, password });\n    }\n  };\n\n  const onBlur = (event: ChangeEvent<HTMLInputElement>) => {\n    validate(event.target.id);\n  };\n\n  const validate = (id: string) => {\n    if (id === 'email') {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        setState((prev) => ({\n          ...prev,\n          emailError: 'A valid email address is required.',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, emailError: '' }));\n        return true;\n      }\n    }\n    if (id === 'password') {\n      if (\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/.test(\n          password\n        )\n      ) {\n        setState((prev) => ({\n          ...prev,\n          passwordError:\n            'Your password must contain at least eight letters, and include a number and an uppercase letter',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, passwordError: '' }));\n        return true;\n      }\n    }\n  };\n\n  return (\n    <div className='login'>\n      <h2>Login</h2>\n      <h3>welcome back</h3>\n      <form onSubmit={onSubmit}>\n        {apiError && <div className='error--api'>{apiError}</div>}\n        <label>Email</label>\n        <input\n          className={emailError && 'login--error'}\n          id='email'\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Email address'\n          type='text'\n          value={email}\n        />\n        <Error error={emailError} />\n        <label>Password</label>\n        <input\n          className={passwordError && 'login--error'}\n          id='password'\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Create a password'\n          type='password'\n          value={password}\n        />\n        <small className='login--right' onClick={forgottenPassword}>\n          Forgotten Password?\n        </small>\n        <Error error={passwordError} />\n        <button color='primary'>\n          {!loading ? (\n            'Login'\n          ) : (\n            <img src={loadingImg} alt='loadingd' className='loading' />\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport { Login };\n","import React, { ChangeEvent, useContext, useState } from 'react';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_MODAL, SET_SHARED } from '../globalState';\nimport loadingImg from '../images/loading.svg';\nimport { Error } from './error';\n\nconst Resetpassword: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const [state, setState] = useState({\n    apiError: '',\n    email: '',\n    emailError: '',\n    loading: false,\n    password: '',\n    passwordError: '',\n  });\n\n  const { apiError, password, passwordError, loading } = state;\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const { id, value } = event.target;\n    if (id === 'password' && state.passwordError) {\n      validate('password');\n    }\n    setState((prev) => ({ ...prev, [id]: value }));\n  };\n\n  interface PropsInterface {\n    password: string;\n  }\n\n  const callApi = async (props: PropsInterface) => {\n    if (props.password) {\n      setState((prev) => ({ ...prev, loading: true }));\n      const resetCode = localStorage.getItem('resetCode');\n      const response = await fetch(\n        `${global.env.apiUrl}/login/confirm-password`,\n        {\n          body: JSON.stringify({\n            newPassword: props.password,\n            resetCode,\n          }),\n          headers: {\n            // prettier-ignore\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: 'POST',\n        }\n      );\n      const content = await response.json();\n      if (response.status === 200) {\n        localStorage.removeItem('resetCode');\n        localStorage.setItem('jwtToken', content.jwtToken);\n        dispatch({ type: SET_SHARED, value: content.shared });\n        dispatch({ type: SET_MODAL, value: '' });\n        setState((prev) => ({ ...prev, loading: false }));\n        window.location.href = '/my/profile';\n      } else {\n        setState((prev) => ({ ...prev, apiError: content.error }));\n      }\n    }\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const passwordValidation = validate('password');\n    if (passwordValidation) {\n      callApi({\n        password: state.password,\n      });\n    }\n  };\n\n  const onBlur = (event: ChangeEvent<HTMLInputElement>) => {\n    validate(event.target.id);\n  };\n\n  const validate = (id: string) => {\n    if (id === 'password') {\n      if (\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/.test(\n          password\n        )\n      ) {\n        setState((prev) => ({\n          ...prev,\n          passwordError:\n            'Your password must contain at least eight letters, and include a number and an uppercase letter',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, passwordError: '' }));\n        return true;\n      }\n    }\n  };\n\n  return (\n    <div className='login'>\n      <h2>Reset password</h2>\n      <h3>enter a new password</h3>\n      <form onSubmit={onSubmit}>\n        {apiError && <div className='error--api'>{apiError}</div>}\n        <label>Password</label>\n        <input\n          className={passwordError && 'login--error'}\n          id='password'\n          onBlur={onBlur}\n          onChange={onChange}\n          placeholder='Create a password'\n          type='password'\n          value={password}\n        />\n        <Error error={passwordError} />\n        <button color='primary'>\n          {!loading ? (\n            'Save'\n          ) : (\n            <img src={loadingImg} alt='loadingd' className='loading' />\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport { Resetpassword };\n","import React, { useContext } from 'react';\nimport { Dispatch, SET_MODAL } from '../globalState';\n\nconst Resetsent: React.FC = () => {\n  const { dispatch } = useContext(Dispatch);\n\n  setTimeout(() => {\n    dispatch({ type: SET_MODAL, value: '' });\n  }, 3000);\n\n  return (\n    <div className='forgot'>\n      <h2>Sent</h2>\n      <h3>\n        We will send a password reset link if this email is associated with an\n        account.\n      </h3>\n    </div>\n  );\n};\n\nexport { Resetsent };\n","import React, { useContext } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Dispatch, SET_MODAL } from '../globalState';\nimport { Forgot } from './forgot';\nimport { Join } from './join';\nimport { Login } from './login';\nimport { Resetpassword } from './resetpassword';\nimport { Resetsent } from './resetsent';\n\ninterface PropsInterface {\n  screen: string;\n}\n\nconst Modal: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const { dispatch } = useContext(Dispatch);\n  const preventDefault = (event: React.MouseEvent) => {\n    event.stopPropagation();\n  };\n  const determineScreen = () => {\n    if (props.screen === 'join') {\n      return (\n        <div className='modal--modalCard' onClick={preventDefault}>\n          <Join />\n        </div>\n      );\n    }\n    if (props.screen === 'login') {\n      return (\n        <div className='modal--modalCard' onClick={preventDefault}>\n          <Login />\n        </div>\n      );\n    }\n    if (props.screen === 'forgot') {\n      return (\n        <div className='modal--modalCard' onClick={preventDefault}>\n          <Forgot />\n        </div>\n      );\n    }\n    if (props.screen === 'resetsent') {\n      return (\n        <div className='modal--modalCard' onClick={preventDefault}>\n          <Resetsent />\n        </div>\n      );\n    }\n    if (props.screen === 'resetpassword') {\n      return (\n        <div className='modal--modalCard' onClick={preventDefault}>\n          <Resetpassword />\n        </div>\n      );\n    }\n  };\n  const screen = determineScreen();\n\n  const closeModal = () => {\n    dispatch({ type: SET_MODAL, value: '' });\n  };\n\n  return (\n    <CSSTransition\n      classNames='modal'\n      in={!!props.screen}\n      timeout={300}\n      unmountOnExit\n    >\n      <div className='modal' onClick={closeModal}>\n        {screen}\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport { Modal };\n","import React from 'react';\nimport { RouteProps } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface PropsInterface {\n  location: RouteProps['location'];\n}\n\nconst SideNav: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const second = props.location ? props.location.pathname.split('/')[2] : '';\n\n  return (\n    <div>\n      <aside className='side-nav'>\n        <Link to={{ pathname: '/my/profile' }}>\n          <div\n            className={`side-nav--item ${second === 'profile' &&\n              'side-nav--selected'}`}\n          >\n            Edit Profile\n          </div>\n        </Link>\n        <Link to={{ pathname: '/my/preferences' }}>\n          <div\n            className={`side-nav--item ${second === 'preferences' &&\n              'side-nav--selected'}`}\n          >\n            Preferences\n          </div>\n        </Link>\n        <Link to={{ pathname: '/my/password' }}>\n          <div\n            className={`side-nav--item ${second === 'password' &&\n              'side-nav--selected'}`}\n          >\n            Password\n          </div>\n        </Link>\n\n      </aside>\n    </div>\n  );\n};\n\nexport { SideNav };\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Global } from '../globalState';\nimport { Dispatch, LOGGED_IN, SET_MODAL } from '../globalState';\n\ninterface PropsInterface {\n  avatar: string;\n  loggedIn: boolean;\n  fullName: string;\n}\n\nconst TopNav: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n  const firstName = props.fullName.split(' ')[0];\n  const initial = firstName.charAt(0).toLowerCase();\n  const imagePath = props.avatar\n    ? global.env.imgUrl + props.avatar\n    : global.env.imgUrl + `initials/${initial}.png`;\n  const [state, setState] = useState({\n    dropDownStatus: false,\n  });\n\n  const login = () => {\n    dispatch({ type: SET_MODAL, value: 'login' });\n  };\n\n  const join = () => {\n    dispatch({ type: SET_MODAL, value: 'join' });\n  };\n\n  const logOut = () => {\n    localStorage.clear();\n    dispatch({ type: LOGGED_IN, value: false });\n  };\n\n  const dropDown = () => {\n    setState((prev) => ({\n      ...prev,\n      dropDownStatus: true,\n    }));\n  };\n\n  window.onclick = (event: any) => {\n    if (\n      // TODO: change to useref\n      event.target.id !== 'dropdown'\n    ) {\n      setState((prev) => ({\n        ...prev,\n        dropDownStatus: false,\n      }));\n    }\n  };\n\n  const determineButtons = () => {\n    if (props.loggedIn) {\n      return (\n        <div className='topnav--buttons' onClick={dropDown} id='dropdown'>\n          <div className='topnav--avatar' id='dropdown'>\n            <img src={imagePath} alt='your first name initial' id='dropdown'/>\n            <div id='dropdown'>{firstName}</div>\n            <div\n            className={`topnav--dropdown ${state.dropDownStatus === true &&\n              'topnav--dropdownon'}`}\n          >\n            <Link to={{ pathname: `/${global.shared.username}` }}>\n              <div className='topnav--item topnav--profile'>Profile</div>\n            </Link>\n            <hr />\n            <Link to={{ pathname: `/my/profile` }}>\n              <div className='topnav--item'>Settings</div>\n            </Link>\n            <div className='topnav--item' onClick={logOut}>\n              Logout\n            </div>\n          </div>\n          </div>\n        </div>\n      );\n    }\n    if (!props.loggedIn) {\n      return (\n        <div className='topnav--buttons'>\n          <button color='primary' onClick={join}>\n            Join Dicky\n          </button>\n          <button color='secondary' onClick={login}>\n            Login\n          </button>\n        </div>\n      );\n    }\n  };\n\n  const buttons = determineButtons();\n\n  return (\n    <nav className='topnav'>\n      <div className='topnav--container'>\n        <div className='topnav--logo'>\n          <Link to='/'>Logo</Link>\n        </div>\n        <div className='topnav--search'></div>\n        {buttons}\n      </div>\n    </nav>\n  );\n};\n\nexport { TopNav };\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_SHARED, WARNING_MESSAGE } from '../globalState';\n\ninterface PropsInterface {\n  message: string;\n}\n\nconst Warning: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const callApi = async () => {\n    dispatch({ type: WARNING_MESSAGE, value: 'sent' });\n    const response = await fetch(`${global.env.apiUrl}/join/resend-email`, {\n      body: JSON.stringify({\n        jwtToken: localStorage.getItem('jwtToken'),\n      }),\n      headers: {\n        // prettier-ignore\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const content = await response.json();\n    if (response.status === 200) {\n      localStorage.setItem('jwtToken', content.jwtToken);\n      dispatch({ type: SET_SHARED, value: content.shared });\n      setTimeout(() => {\n        dispatch({ type: WARNING_MESSAGE, value: 'verify' });\n       }, 2000);\n    } else {\n      // TODO: Display error to front end and style, modal error?\n      console.log(content.error);\n    }\n  };\n\n  const getMessage = (messageKey: string) => {\n    if (messageKey === 'verify') {\n      return (\n        <div>\n          Please confirm your email address. If you haven't received anything\n          you can{' '}\n          <b>\n            <Link to={{ pathname: '/my/profile' }}>update your email</Link>\n          </b>\n          {' '} or <b onClick={callApi}>resend confirmation</b>.\n        </div>\n      );\n    }\n    if (messageKey === 'offline') return <div>offline</div>;\n    if (messageKey === 'sent') return <div>Email sent!</div>;\n  };\n\n  const displayText = getMessage(props.message);\n\n  return (\n    <CSSTransition\n      in={!!props.message}\n      timeout={300}\n      unmountOnExit\n      classNames='warning'\n    >\n      <div className='warning'>\n        <TransitionGroup>\n          <CSSTransition\n            key={props.message || ''}\n            timeout={300}\n            classNames='warning-text'\n          >\n            <div className='warning-text'>{displayText}</div>\n          </CSSTransition>\n        </TransitionGroup>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport { Warning };\n","import React, { useContext, useEffect } from 'react';\nimport { RouteProps } from 'react-router';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_SHARED } from '../globalState';\nimport { Footer } from './footer';\nimport { Modal } from './modal';\nimport { SideNav } from './sideNav';\nimport { TopNav } from './topNav';\nimport { Warning } from './warning';\n\ninterface PropsInterface {\n  location: RouteProps['location'];\n  children: RouteProps['children'];\n}\n\nconst Layout: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  useEffect(() => {\n    const callApi = async (path: string) => {\n      if (path) {\n        const response = await fetch(`${global.env.apiUrl}/my/location`, {\n          body: JSON.stringify({\n            jwtToken: localStorage.getItem('jwtToken'),\n            location: path,\n          }),\n          headers: {\n            // prettier-ignore\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: 'PUT',\n        });\n        const content = await response.json();\n        if (response.status === 200) {\n          localStorage.setItem('jwtToken', content.jwtToken);\n          dispatch({ type: SET_SHARED, value: content.shared });\n        } else {\n          localStorage.clear();\n          window.location.href = '/';\n        }\n      }\n    };\n    if (props.location && localStorage.getItem('jwtToken')) {\n      callApi(props.location.pathname);\n    }\n  }, [dispatch, global.env.apiUrl, props.location]);\n\n  let reveal = false;\n\n  const determineLayout = (path: string) => {\n    if (['my'].includes(path)) {\n      return (\n        <div className='layout--sidenav'>\n          <SideNav location={props.location}></SideNav>\n          <div>{props.children}</div>\n        </div>\n      );\n    } else return <div>{props.children}</div>;\n  };\n\n  const first = props.location ? props.location.pathname.split('/')[1] : '';\n\n  if (['my'].includes(first) && (!global.shared.loggedIn || !localStorage.getItem('jwtToken'))) {\n    window.location.href = '/';\n  } else reveal = true;\n\n  const layout = determineLayout(first);\n\n  return (\n    <div className='layout'>\n      {reveal && (\n        <React.Fragment>\n          <header>\n            <Modal screen={global.display.modal} />\n            <Warning message={global.shared.warningMessage} />\n            <TopNav\n              loggedIn={global.shared.loggedIn}\n              fullName={global.shared.fullName}\n              avatar={global.shared.avatarId}\n            />\n          </header>\n          <main className='layout--main'>{layout}</main>\n        </React.Fragment>\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nexport { Layout };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Global } from '../globalState';\nimport { Dispatch, SET_SHARED } from '../globalState';\n\ninterface ConfirmProps\n  extends RouteComponentProps<{ confirmationCode: string }> {}\n\nconst ConfirmEmail: React.FC<ConfirmProps> = (props: ConfirmProps) => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n  const confirmationCode = props.match.params.confirmationCode;\n\n  const [state, setState] = useState({\n    apiError: '',\n  });\n\n  const { apiError } = state;\n  useEffect(() => {\n    async function checkConfirmationCode() {\n      const response = await fetch(`${global.env.apiUrl}/join/confirm-email`, {\n        body: JSON.stringify({ confirmationCode }),\n        headers: {\n          // prettier-ignore\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n      });\n      const content = await response.json();\n      if (response.status === 200) {\n        localStorage.setItem('jwtToken', content.jwtToken);\n        localStorage.setItem('shared', JSON.stringify(content.shared));\n        dispatch({ type: SET_SHARED, value: content.shared });\n        props.history.push('/my/profile');\n      } else {\n        setState((prev) => ({ ...prev, apiError: content.error }));\n      }\n    }\n    if (confirmationCode) {\n      checkConfirmationCode();\n    }\n  }, [confirmationCode, dispatch, global.env.apiUrl, props.history]);\n\n  return (\n    <div className='page'>\n      {apiError && <div className='error--api'>{apiError}</div>}\n    </div>\n  );\n};\n\nexport { ConfirmEmail };\n","import React from 'react';\n\nconst Home: React.FC = () => {\n  return <section></section>;\n};\n\nexport { Home };\n","import React, { useContext, useState } from 'react';\nimport { Error } from '../../components/error';\nimport { Global } from '../../globalState';\nimport { Dispatch, SET_MODAL, SET_SHARED } from '../../globalState';\nimport loadingImg from '../../images/loading.svg';\n\nconst Password: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const [state, setState] = useState({\n    apiError: '',\n    confirmPassword: '',\n    confirmPasswordError: '',\n    currentPassword: '',\n    currentPasswordError: '',\n    loading: false,\n    newPassword: '',\n    newPasswordError: '',\n  });\n  const {\n    apiError,\n    confirmPassword,\n    confirmPasswordError,\n    currentPassword,\n    currentPasswordError,\n    newPassword,\n    newPasswordError,\n  } = state;\n\n  const forgottenPassword = () => {\n    dispatch({ type: SET_MODAL, value: 'forgot' });\n  };\n\n  const onChange = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    event.persist();\n    const { name, value } = event.target;\n    if (name === 'currentPassword' && currentPasswordError) {\n      validate('currentPassword', currentPassword);\n    }\n    if (name === 'newPassword' && newPasswordError) {\n      validate('newPassword', newPassword);\n    }\n    if (name === 'confirmPassword' && confirmPasswordError) {\n      validate('confirmPassword', confirmPassword);\n    }\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  interface PropsInterface {\n    currentPassword: string;\n    newPassword: string;\n  }\n  const callApi = async (props: PropsInterface) => {\n    setState((prev) => ({ ...prev, loading: true }));\n    const response = await fetch(`${global.env.apiUrl}/my/password`, {\n      body: JSON.stringify({\n        currentPassword: props.currentPassword,\n        jwtToken: localStorage.getItem('jwtToken'),\n        newPassword: props.newPassword,\n      }),\n      headers: {\n        // prettier-ignore\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const content = await response.json();\n    setState((prev) => ({ ...prev, loading: false, apiError: '' }));\n    if (response.status === 200) {\n      localStorage.setItem('jwtToken', content.jwtToken);\n      dispatch({ type: SET_SHARED, value: content.shared });\n      setState((prev) => ({\n        ...prev,\n        confirmPassword: '',\n        currentPassword: '',\n        newPassword: '',\n      }));\n    } else {\n      setState((prev) => ({ ...prev, apiError: content.error }));\n    }\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const confirmPasswordValidation = validate(\n      'confirmPassword',\n      confirmPassword\n    );\n    const currentPasswordValidation = validate(\n      'currentPassword',\n      currentPassword\n    );\n    const newPasswordValidation = validate('newPassword', newPassword);\n\n    if (\n      confirmPasswordValidation &&\n      currentPasswordValidation &&\n      newPasswordValidation\n    ) {\n      if (newPassword === confirmPassword) {\n        callApi({ currentPassword, newPassword });\n      } else {\n        setState((prev) => ({\n          ...prev,\n          confirmPasswordError: 'Passwords are not the same',\n        }));\n      }\n    }\n  };\n\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value && event.target.value.length >= 1) {\n      validate(event.target.name, event.target.value);\n    }\n  };\n\n  const validate = (name: string, password: string) => {\n    if (\n      name === 'confirmPassword' ||\n      name === 'currentPassword' ||\n      name === 'newPassword'\n    ) {\n      if (\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/.test(\n          password\n        )\n      ) {\n        setState((prev) => ({\n          ...prev,\n          [name +\n          'Error']: '8+ charectors, and include 1: number, uppercase & special charector',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, [name + 'Error']: '' }));\n        return true;\n      }\n    }\n  };\n\n  return (\n    <span className='page'>\n      <form onSubmit={onSubmit} className='form'>\n        <h4 className='form--title'>Change Password</h4>\n        <div className='form--body'>\n          <div>Password</div>\n          <div className='form--relative'>\n            {apiError && <div className='error--api'>{apiError}</div>}\n\n            <label>\n              Current Password\n              <input\n                autoFocus\n                className={currentPasswordError && 'form--error'}\n                maxLength={70}\n                name='currentPassword'\n                onBlur={onBlur}\n                onChange={onChange}\n                type='password'\n                value={currentPassword}\n              />\n              <Error error={currentPasswordError} />\n            </label>\n\n            <small onClick={forgottenPassword} className='form--link'>Forgot your password?</small>\n\n            <label>\n              New Password\n              <input\n                className={newPasswordError && 'form--error'}\n                maxLength={70}\n                name='newPassword'\n                onBlur={onBlur}\n                onChange={onChange}\n                type='password'\n                value={newPassword}\n              />\n              <Error error={newPasswordError} />\n            </label>\n\n            <label>\n              Confirm Password\n              <input\n                className={confirmPasswordError && 'form--error'}\n                maxLength={70}\n                name='confirmPassword'\n                onBlur={onBlur}\n                onChange={onChange}\n                type='password'\n                value={confirmPassword}\n              />\n              <Error error={confirmPasswordError} />\n            </label>\n          </div>\n        </div>\n        <div className='form--footer'>\n          <small></small>\n          <div>\n            <button color='primary'>\n              {!state.loading ? (\n                'Save Changes'\n              ) : (\n                <img src={loadingImg} alt='loading' className='loading' />\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    </span>\n  );\n};\n\nexport { Password };\n","import React, { useContext, useState } from 'react';\nimport { Global } from '../../globalState';\nimport { Dispatch, SET_SHARED } from '../../globalState';\nimport loadingImg from '../../images/loading.svg';\n\nconst Preferences: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const [state, setState] = useState({\n    apiError: '',\n    language: global.shared.language,\n    currency: global.shared.currency,\n    loading: false,\n  });\n  const {\n    apiError,\n    language,\n    currency,\n    loading,\n  } = state;\n\n\n  const onChange = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    event.persist();\n    const { name, value } = event.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  interface PropsInterface {\n    language: string;\n    currency: string;\n  }\n  const callApi = async (props: PropsInterface) => {\n    setState((prev) => ({ ...prev, loading: true }));\n    const response = await fetch(`${global.env.apiUrl}/my/preferences`, {\n      body: JSON.stringify({\n        currency: props.currency,\n        jwtToken: localStorage.getItem('jwtToken'),\n        language: props.language,\n      }),\n      headers: {\n        // prettier-ignore\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const content = await response.json();\n    setState((prev) => ({ ...prev, loading: false, apiError: '' }));\n    if (response.status === 200) {\n      localStorage.setItem('jwtToken', content.jwtToken);\n      dispatch({ type: SET_SHARED, value: content.shared });\n    } else {\n      setState((prev) => ({ ...prev, apiError: content.error }));\n    }\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    callApi({language, currency})\n  };\n\n  return (\n    <span className='page'>\n      <form onSubmit={onSubmit} className='form'>\n        <h4 className='form--title'>Edit Preferences</h4>\n        <div className='form--body'>\n          <div>Localization</div>\n          <div className='form--relative'>\n            {apiError && <div className='error--api'>{apiError}</div>}\n\n            <label>\n              Language\n              <select\n                autoFocus\n                name='language'\n                onChange={onChange}\n                value={language}\n              >\n                <option value='ca'>Català</option>\n                <option value='cs'>Česky</option>\n                <option value='da'>Dansk</option>\n                <option value='de'>Deutsch</option>\n                <option value='el'>Ελληνικά</option>\n                <option value='en'>English</option>\n                <option value='es'>Español</option>\n                <option value='et'>Eesti</option>\n                <option value='eu'>Basque</option>\n                <option value='fil'>Filipino</option>\n                <option value='fr'>Français</option>\n                <option value='id'>Indonesian</option>\n                <option value='is'>Íslenska</option>\n                <option value='it'>Italiano</option>\n                <option value='lt'>Lietuviškai</option>\n                <option value='nl'>Nederlands</option>\n                <option value='no'>Norsk</option>\n                <option value='pl'>Polski</option>\n                <option value='pt-br'>Português (Br)</option>\n                <option value='pt'>Português (Pt)</option>\n                <option value='ro'>Română</option>\n                <option value='ru'>Русский</option>\n                <option value='sk'>Slovensky</option>\n                <option value='fi'>Suomi</option>\n                <option value='sv'>Svenska</option>\n                <option value='th'>ภาษาไทย</option>\n                <option value='tr'>Türkçe</option>\n                <option value='ja'>日本語</option>\n                <option value='zh-hans'>简体中文</option>\n                <option value='zh-hant'>繁體中文</option>\n                <option value='ko'>한국어</option>\n                <option value='sr'>Српски</option>\n                <option value='sr-latn'>Srpski (Latinica)</option>\n              </select>\n            </label>\n\n            <label>\n              Currency\n              <select\n                name='currency'\n                onChange={onChange}\n                value={currency}\n              >\n                <option value='AUD'>Australian dollars ($)</option>\n                <option value='BHD'>Bahrain dinars (BD)</option>\n                <option value='BTC'>Bitcoin (Ƀ)</option>\n                <option value='BRL'>Brazil reals (R$)</option>\n                <option value='GBP'>British pounds (£)</option>\n                <option value='BND'>Brunei dollars ($)</option>\n                <option value='CAD'>Canadian dollars ($)</option>\n                <option value='CNY'>Chinese yuan (¥)</option>\n                <option value='CZK'>Czech koruny (Kč)</option>\n                <option value='DKK'>Danish kroner (kr)</option>\n                <option value='EGP'>Egyptian pounds (£)</option>\n                <option value='EUR'>Euros (€)</option>\n                <option value='HKD'>Hong Kong dollars ($)</option>\n                <option value='HUF'>Hungarian forints (Ft)</option>\n                <option value='INR'>Indian rupees (₹)</option>\n                <option value='IDR'>Indonesian rupiahs (Rp)</option>\n                <option value='ILS'>Israeli shekels (₪)</option>\n                <option value='JPY'>Japanese yen (¥)</option>\n                <option value='JOD'>Jordanian dinars (JD)</option>\n                <option value='KZT'>Kazakh tenge (лв)</option>\n                <option value='KWD'>Kuwaiti dinars (K.D.)</option>\n                <option value='LTL'>Lithuanian litai (Lt)</option>\n                <option value='MYR'>Malaysian ringgits (RM)</option>\n                <option value='MXN'>Mexican pesos ($)</option>\n                <option value='NZD'>New Zealand dollars ($)</option>\n                <option value='NOK'>Norwegian kroner (kr)</option>\n                <option value='PKR'>Pakistan rupees (₨)</option>\n                <option value='PHP'>Philippine pesos (₱)</option>\n                <option value='PLN'>Polish zloty (zł)</option>\n                <option value='QAR'>Qatar riyals (﷼)</option>\n                <option value='RON'>Romanian leu (L)</option>\n                <option value='RUB'>Russian rubles (руб)</option>\n                <option value='SAR'>Saudi riyals (﷼)</option>\n                <option value='RSD'>Serbian dinars (Дин.)</option>\n                <option value='SGD'>Singapore dollars ($)</option>\n                <option value='ZAR'>South African rands (R)</option>\n                <option value='KRW'>South Korean won (₩)</option>\n                <option value='SEK'>Swedish kronor (kr)</option>\n                <option value='CHF'>Swiss francs (CHF)</option>\n                <option value='TWD'>Taiwan dollars (NT$)</option>\n                <option value='THB'>Thai baht (฿)</option>\n                <option value='TRY'>Turkish liras (₤)</option>\n                <option value='USD'>U.S. dollars ($)</option>\n                <option value='AED'>United Arab Emirates dirhams (AED)</option>\n                <option value='VND'>Vietnamese dong (₫)</option>\n              </select>\n            </label>\n          </div>\n        </div>\n        <div className='form--footer'>\n          <small></small>\n          <div>\n            <button color='primary'>\n              {!loading ? (\n                'Save Changes'\n              ) : (\n                <img src={loadingImg} alt='loading' className='loading' />\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    </span>\n  );\n};\n\nexport { Preferences };\n","import React, { useContext, useState } from 'react';\nimport { Dispatch, SET_SHARED } from '../globalState';\n\ninterface PropsInterface {\n  placeholder: string;\n  resizeTo: number;\n  saveImg: string;\n  signedUrl: string;\n  isMe: boolean;\n}\n\nconst Cover: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const { dispatch } = useContext(Dispatch);\n  const [state, setState] = useState({\n    imageURL: props.placeholder,\n    isMe: props.isMe,\n  });\n\n  const { imageURL, isMe } = state;\n\n  const divStyle = {\n    background: `url(${imageURL}) no-repeat center center`,\n    backgroundColor: 'grey',\n    backgroundSize: 'cover',\n    height: '300px',\n    overflow: 'hidden',\n    width: '100%',\n  };\n\n  // tslint:disable-next-line: no-any\n  const uploadImg = async (resizedBlob: any) => {\n    const response = await fetch(props.signedUrl, {\n      body: JSON.stringify({\n        jwtToken: localStorage.getItem('jwtToken'),\n      }),\n      headers: {\n        // prettier-ignore\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const content = await response.json();\n    if (response.status === 200) {\n      const signedUrl = content.signedUrl;\n      const response2 = await fetch(signedUrl, {\n        body: resizedBlob,\n        headers: {\n          // prettier-ignore\n          'Accept': 'application/json',\n          'Content-Type': 'image/jpeg',\n        },\n        method: 'PUT',\n      });\n      if (response2.status === 200) {\n        const coverId = `${response2.url.split('/')[4]}/${\n          response2.url.split('/')[5].split('?')[0]\n        }`;\n        const response3 = await fetch(props.saveImg, {\n          body: JSON.stringify({\n            coverId,\n            jwtToken: localStorage.getItem('jwtToken'),\n          }),\n          headers: {\n            // prettier-ignore\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: 'POST',\n        });\n        const content3 = await response3.json();\n        dispatch({ type: SET_SHARED, value: content3.shared });\n      }\n    }\n  };\n  const dataURLToBlob = (dataURL: string) => {\n    const BASE64_MARKER = ';base64,';\n    if (dataURL.indexOf(BASE64_MARKER) === -1) {\n      const theParts = dataURL.split(',');\n      const theContentType = theParts[0].split(':')[1];\n      const theRaw = theParts[1];\n      return new Blob([theRaw], { type: theContentType });\n    }\n    const parts = dataURL.split(BASE64_MARKER);\n    const contentType = parts[0].split(':')[1];\n    const raw = window.atob(parts[1]);\n    const rawLength = raw.length;\n    const uInt8Array = new Uint8Array(rawLength);\n    for (let i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n    return new Blob([uInt8Array], { type: contentType });\n  };\n\n  const resizeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      const file = event.currentTarget.files[0];\n      const reader = new FileReader();\n      reader.onload = (readerEvent) => {\n        const image = new Image();\n        image.onload = async (imageEvent) => {\n          const canvas = document.createElement('canvas');\n          canvas.width = 900;\n          canvas.height = 300;\n          const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n          ctx.imageSmoothingEnabled = false;\n          let width = image.width;\n          let height = image.height;\n          height *= 900 / width;\n          width = 900;\n          ctx.drawImage(image, 0, 0, width, height);\n          const base64 = canvas.toDataURL('image/jpeg');\n          setState((prev) => ({ ...prev, imageURL: base64, height, width }));\n          const blob = dataURLToBlob(base64);\n          uploadImg(blob);\n        };\n        image.src = URL.createObjectURL(file);\n      };\n      if (reader) reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className='cover' style={divStyle}>\n      {isMe && (\n        <label className='cover--label'>\n          <span className='cover--upload'>Upload cover image</span>\n          <input\n            accept='image/png, image/jpeg'\n            id='photo'\n            name='photo'\n            onChange={resizeImage}\n            type='file'\n          ></input>\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport { Cover };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Cover } from '../../components/cover';\nimport { Global } from '../../globalState';\n\ninterface ConfirmProps extends RouteComponentProps<{ username: string }> {}\n\nconst Profile: React.FC<ConfirmProps> = (props: ConfirmProps) => {\n  const { global } = useContext(Global);\n  const username = props.match.params.username;\n  const placeholder = global.env.imgUrl + global.shared.coverId;\n\n  const [state, setState] = useState({\n    avatarId: '',\n    bio: '',\n    country: '',\n    fullName: '',\n    isMe: false,\n    loading: true,\n    webSite: '',\n  });\n\n  const { avatarId, bio, country, fullName, isMe, loading, webSite } = state;\n\n  const profile = () => {\n    props.history.push('/my/profile');\n  };\n  useEffect(() => {\n    async function callApi() {\n      const response = await fetch(`${global.env.apiUrl}/user/${username}`, {\n        headers: {\n          // prettier-ignore\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        method: 'GET',\n      });\n      const content = await response.json();\n      if (response.status === 200) {\n        setState((prev) => ({\n          ...prev,\n          avatarId: content.avatarId,\n          bio: content.bio,\n          country: content.country,\n          fullName: content.fullName,\n          isMe: global.shared.username === content.username ? true : false,\n          loading: false,\n          webSite: content.webSite,\n\n        }));\n      }\n    }\n    if (username) {\n      callApi();\n    }\n  }, [global.env.apiUrl, global.shared.username, username]);\n  return (\n    <div className='profile'>\n      {!loading && (\n        <React.Fragment>\n          <div>\n            <img\n              src={global.env.imgUrl + avatarId}\n              className='profile--avatar'\n              alt={fullName}\n            />{' '}\n            <br />\n            <h1 className='profile--name'>{fullName}</h1>\n            <h2 className='profile--username'>@{username}</h2>\n            <p className='profile--bio'>{bio}</p>\n            <p className='profile--followers'>\n              <b>20</b> Followers\n            </p>\n            <p className='profile--following'>\n              <b>32</b> Following\n            </p>\n            <br />\n            <p className='profile--country'>{country}</p>\n            <p className='profile--website'>\n              <a href={webSite} target='_blank'>\n                {webSite.replace(/(^\\w+:|^)\\/\\//, '')}\n              </a>\n            </p>\n          </div>\n          <div>\n            <div className='profile--header'>\n              <Cover\n                isMe={isMe}\n                placeholder={placeholder}\n                resizeTo={900}\n                signedUrl={`${global.env.apiUrl}/upload/signed-url`}\n                saveImg={`${global.env.apiUrl}/my/cover`}\n              />\n              <div className='profile--nav'>\n                <div>\n                  <button className='profile--button'>Items</button>\n                  <button className='profile--button'>Games</button>\n                </div>\n                <div>\n                  {isMe && (\n                    <button className='profile--button' onClick={profile}>\n                      Edit Profile\n                    </button>\n                  )}\n                  {!isMe && (\n                    <button className='profile--follow' onClick={profile}>\n                      + Follow\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport { Profile };\n","import React, { useContext, useState } from 'react';\nimport { Dispatch, SET_SHARED } from '../globalState';\n\ninterface PropsInterface {\n  placeholder: string;\n  resizeTo: number;\n  saveImg: string;\n  signedUrl: string;\n}\n\nconst Photo: React.FC<PropsInterface> = (props: PropsInterface) => {\n  const { dispatch } = useContext(Dispatch);\n  const [state, setState] = useState({\n    imageURL: props.placeholder,\n  });\n\n  const { imageURL } = state;\n\n  // tslint:disable-next-line: no-any\n  const uploadImg = async (resizedBlob: any) => {\n    const response = await fetch(props.signedUrl, {\n      body: JSON.stringify({\n        jwtToken: localStorage.getItem('jwtToken'),\n      }),\n      headers: {\n        // prettier-ignore\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const content = await response.json();\n    if (response.status === 200) {\n      const signedUrl = content.signedUrl;\n      const response2 = await fetch(signedUrl, {\n        body: resizedBlob,\n        headers: {\n          // prettier-ignore\n          'Accept': 'application/json',\n          'Content-Type': 'image/jpeg',\n        },\n        method: 'PUT',\n      });\n      if (response2.status === 200) {\n        const avatarId = `${response2.url.split('/')[4]}/${\n          response2.url.split('/')[5].split('?')[0]\n        }`;\n        const response3 = await fetch(props.saveImg, {\n          body: JSON.stringify({\n            avatarId,\n            jwtToken: localStorage.getItem('jwtToken'),\n          }),\n          headers: {\n            // prettier-ignore\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          method: 'POST',\n        });\n        const content3 = await response3.json();\n        dispatch({ type: SET_SHARED, value: content3.shared });\n      }\n    }\n  };\n  const dataURLToBlob = (dataURL: string) => {\n    const BASE64_MARKER = ';base64,';\n    if (dataURL.indexOf(BASE64_MARKER) === -1) {\n      const theParts = dataURL.split(',');\n      const theContentType = theParts[0].split(':')[1];\n      const theRaw = theParts[1];\n      return new Blob([theRaw], { type: theContentType });\n    }\n    const parts = dataURL.split(BASE64_MARKER);\n    const contentType = parts[0].split(':')[1];\n    const raw = window.atob(parts[1]);\n    const rawLength = raw.length;\n    const uInt8Array = new Uint8Array(rawLength);\n    for (let i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n    return new Blob([uInt8Array], { type: contentType });\n  };\n\n  const resizeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.currentTarget.files) {\n      const file = event.currentTarget.files[0];\n      const reader = new FileReader();\n      reader.onload = (readerEvent) => {\n        const image = new Image();\n        image.onload = async (imageEvent) => {\n          const canvas = document.createElement('canvas');\n          const maxSize = props.resizeTo;\n          canvas.width = maxSize;\n          canvas.height = maxSize;\n          const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n          ctx.imageSmoothingEnabled = false;\n          let width = image.width;\n          let height = image.height;\n          if (width > height && width > maxSize) {\n            width *= maxSize / height;\n            height = maxSize;\n          } else if (height > maxSize) {\n            height *= maxSize / width;\n            width = maxSize;\n          }\n          ctx.drawImage(image, 0, 0, width, height);\n          const base64 = canvas.toDataURL('image/jpeg');\n          setState((prev) => ({ ...prev, imageURL: base64, height, width }));\n          const blob = dataURLToBlob(base64);\n          uploadImg(blob);\n        };\n        image.src = URL.createObjectURL(file);\n      };\n      if (reader) reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className='photo'>\n      <label>\n        <img\n          alt='your first name initial'\n          className='photo--preview'\n          src={imageURL}\n        />\n        <input\n          accept='image/png, image/jpeg'\n          id='photo'\n          name='photo'\n          onChange={resizeImage}\n          type='file'\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nexport { Photo };\n","import React, { useContext, useState } from 'react';\nimport { Error } from '../../components/error';\nimport { Photo } from '../../components/photo';\nimport { Global } from '../../globalState';\nimport { Dispatch, SET_SHARED } from '../../globalState';\nimport loadingImg from '../../images/loading.svg';\n\nconst Settings: React.FC = () => {\n  const { global } = useContext(Global);\n  const { dispatch } = useContext(Dispatch);\n\n  const dob = global.shared.dob\n    ? new Date(global.shared.dob)\n    : new Date('0-0-0');\n  const dobDay = dob.getDate() || 0;\n  const dobMonth = dob.getMonth() + 1 || 0;\n  const dobYear = dob.getFullYear() || 0;\n\n  let placeholder: string;\n  if (!global.shared.avatarId) {\n    const initial = global.shared.fullName\n      .split(' ')[0]\n      .charAt(0)\n      .toLowerCase();\n    placeholder = global.env.imgUrl + `initials/${initial}.png`;\n  } else {\n    placeholder = global.env.imgUrl + global.shared.avatarId;\n  }\n\n  const [state, setState] = useState({\n    apiError: '',\n    bio: global.shared.bio || '',\n    bioError: '',\n    country: global.shared.country,\n    day: dobDay.toString(),\n    dobError: '',\n    email: global.shared.email,\n    emailError: '',\n    fullName: global.shared.fullName,\n    fullNameError: '',\n    gender: global.shared.gender || 'other',\n    loading: false,\n    month: dobMonth.toString(),\n    username: global.shared.username || '',\n    usernameError: '',\n    webSite: global.shared.webSite || '',\n    webSiteError: '',\n    year: dobYear.toString(),\n  });\n  const {\n    apiError,\n    bio,\n    bioError,\n    country,\n    day,\n    dobError,\n    email,\n    emailError,\n    fullName,\n    fullNameError,\n    gender,\n    loading,\n    month,\n    username,\n    usernameError,\n    webSite,\n    webSiteError,\n    year,\n  } = state;\n\n  const onChange = (\n    event: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    event.persist();\n    const { id, name, value, type } = event.target;\n\n    if (name === 'fullName' && fullNameError) {\n      validate('fullName');\n    }\n    if (name === 'webSite' && webSiteError) {\n      validate('webSite');\n    }\n    if (name === 'bio' && bioError) {\n      validate('bio');\n    }\n    if (name === 'email' && emailError) {\n      validate('email');\n    }\n    if (type === 'radio') {\n      setState((prev) => ({ ...prev, gender: id }));\n    } else {\n      setState((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  interface PropsInterface {\n    bio: string;\n    country: string;\n    day: string;\n    email: string;\n    fullName: string;\n    gender: string;\n    month: string;\n    webSite: string;\n    year: string;\n  }\n  const callApi = async (props: PropsInterface) => {\n    setState((prev) => ({ ...prev, loading: true }));\n    const emailChanged = props.email === global.shared.email ? false : true;\n    const response = await fetch(`${global.env.apiUrl}/my/profile`, {\n      body: JSON.stringify({\n        bio: props.bio,\n        country: props.country || '',\n        day: props.day,\n        email: props.email,\n        emailChanged,\n        fullName: props.fullName,\n        gender: props.gender,\n        jwtToken: localStorage.getItem('jwtToken'),\n        month: props.month,\n        webSite: props.webSite || '',\n        year: props.year,\n      }),\n      headers: {\n        // prettier-ignore\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    });\n    const content = await response.json();\n    setState((prev) => ({ ...prev, loading: false }));\n    if (response.status === 200) {\n      localStorage.setItem('jwtToken', content.jwtToken);\n      dispatch({ type: SET_SHARED, value: content.shared });\n    } else {\n      setState((prev) => ({ ...prev, apiError: content.error }));\n    }\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const fullNameValidation = validate('fullName');\n    const webSiteValidation = validate('webSite');\n    const bioValidation = validate('bio');\n    const emailValidation = validate('email');\n\n    if (\n      fullNameValidation &&\n      webSiteValidation &&\n      bioValidation &&\n      emailValidation\n    ) {\n      callApi({\n        bio: state.bio,\n        country: state.country,\n        day: state.day,\n        email: state.email,\n        fullName: state.fullName,\n        gender: state.gender,\n        month: state.month,\n        webSite: state.webSite,\n        year: state.year,\n      });\n    }\n  };\n\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\n    validate(event.target.name);\n  };\n\n  const validate = (name: string) => {\n    if (name === 'fullName') {\n      if (!/^.{2,}$/.test(fullName)) {\n        setState((prev) => ({\n          ...prev,\n          fullNameError: '2 charectors or longer',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, fullNameError: '' }));\n        return true;\n      }\n    }\n    if (name === 'webSite') {\n      if (\n        webSite &&\n        webSite.length > 0 &&\n        !/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/.test(\n          webSite\n        )\n      ) {\n        setState((prev) => ({\n          ...prev,\n          webSiteError: 'Must start with http:// or https://',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, webSiteError: '' }));\n        return true;\n      }\n    }\n    if (name === 'bio') {\n      if (bio && bio.length > 0 && bio.length > 256) {\n        setState((prev) => ({\n          ...prev,\n          bioError: 'Must be less than 256 charectors',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, bioError: '' }));\n        return true;\n      }\n    }\n    if (name === 'email') {\n      if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n        setState((prev) => ({\n          ...prev,\n          emailError: 'A valid email address is required.',\n        }));\n        return false;\n      } else {\n        setState((prev) => ({ ...prev, emailError: '' }));\n        return true;\n      }\n    }\n  };\n\n  return (\n    <span className='page'>\n      <form onSubmit={onSubmit} className='form'>\n        <h4 className='form--title'>Edit Profile</h4>\n        <div className='form--body'>\n          <div>Profile</div>\n          <div className='form--relative'>\n            {apiError && <div className='error--api'>{apiError}</div>}\n            <label>Photo</label>\n            <Photo\n              placeholder={placeholder}\n              resizeTo={180}\n              signedUrl={`${global.env.apiUrl}/upload/signed-url`}\n              saveImg={`${global.env.apiUrl}/my/avatar`}\n            />\n            <label>\n              Full Name\n              <input\n                autoFocus\n                className={fullNameError && 'form--error'}\n                maxLength={70}\n                name='fullName'\n                onBlur={onBlur}\n                onChange={onChange}\n                type='text'\n                value={fullName}\n              />\n              <Error error={fullNameError} />\n            </label>\n\n            <small>Your real name, so your friends can find you.</small>\n            <label>\n              Username\n              <input\n                disabled\n                name='username'\n                onChange={onChange}\n                type='text'\n                value={username}\n              />\n              <Error error={usernameError} />\n            </label>\n            <small>https://dicky.world/{username}</small>\n\n            <label>\n              Website\n              <input\n                className={webSiteError && 'form--error'}\n                name='webSite'\n                onBlur={onBlur}\n                onChange={onChange}\n                placeholder='https://www.'\n                type='text'\n                value={webSite}\n              />\n              <Error error={webSiteError} />\n            </label>\n\n            <label>\n              Country\n              <select name='country' value={country} onChange={onChange}>\n                <option value=''>Select...</option>\n                <option value='AX'>Aaland Islands</option>\n                <option value='AF'>Afghanistan</option>\n                <option value='AL'>Albania</option>\n                <option value='DZ'>Algeria</option>\n                <option value='AS'>American Samoa</option>\n                <option value='AD'>Andorra</option>\n                <option value='AO'>Angola</option>\n                <option value='AI'>Anguilla</option>\n                <option value='AQ'>Antarctica</option>\n                <option value='AG'>Antigua And Barbuda</option>\n                <option value='AR'>Argentina</option>\n                <option value='AM'>Armenia</option>\n                <option value='AW'>Aruba</option>\n                <option value='AU'>Australia</option>\n                <option value='AT'>Austria</option>\n                <option value='AZ'>Azerbaijan</option>\n                <option value='BS'>Bahamas</option>\n                <option value='BH'>Bahrain</option>\n                <option value='BD'>Bangladesh</option>\n                <option value='BB'>Barbados</option>\n                <option value='BY'>Belarus</option>\n                <option value='BE'>Belgium</option>\n                <option value='BZ'>Belize</option>\n                <option value='BJ'>Benin</option>\n                <option value='BM'>Bermuda</option>\n                <option value='BT'>Bhutan</option>\n                <option value='BO'>Bolivia</option>\n                <option value='BA'>Bosnia And Herzegowina</option>\n                <option value='BW'>Botswana</option>\n                <option value='BV'>Bouvet Island</option>\n                <option value='BR'>Brazil</option>\n                <option value='IO'>British Indian Ocean Territory</option>\n                <option value='BN'>Brunei Darussalam</option>\n                <option value='BG'>Bulgaria</option>\n                <option value='BF'>Burkina Faso</option>\n                <option value='BI'>Burundi</option>\n                <option value='KH'>Cambodia</option>\n                <option value='CM'>Cameroon</option>\n                <option value='CA'>Canada</option>\n                <option value='CV'>Cape Verde</option>\n                <option value='KY'>Cayman Islands</option>\n                <option value='CF'>Central African Republic</option>\n                <option value='TD'>Chad</option>\n                <option value='CL'>Chile</option>\n                <option value='CN'>China</option>\n                <option value='CX'>Christmas Island</option>\n                <option value='CC'>Cocos (Keeling) Islands</option>\n                <option value='CO'>Colombia</option>\n                <option value='KM'>Comoros</option>\n                <option value='CD'>\n                  Congo, Democratic Republic Of (Was Zaire)\n                </option>\n                <option value='CG'>Congo, Republic Of</option>\n                <option value='CK'>Cook Islands</option>\n                <option value='CR'>Costa Rica</option>\n                <option value='CI'>Cote D'Ivoire</option>\n                <option value='HR'>Croatia (Local Name: Hrvatska)</option>\n                <option value='CU'>Cuba</option>\n                <option value='CY'>Cyprus</option>\n                <option value='CZ'>Czech Republic</option>\n                <option value='DK'>Denmark</option>\n                <option value='DJ'>Djibouti</option>\n                <option value='DM'>Dominica</option>\n                <option value='DO'>Dominican Republic</option>\n                <option value='TL'>East Timor</option>\n                <option value='EC'>Ecuador</option>\n                <option value='EG'>Egypt</option>\n                <option value='SV'>El Salvador</option>\n                <option value='GQ'>Equatorial Guinea</option>\n                <option value='ER'>Eritrea</option>\n                <option value='EE'>Estonia</option>\n                <option value='ET'>Ethiopia</option>\n                <option value='FK'>Falkland Islands (Malvinas)</option>\n                <option value='FO'>Faroe Islands</option>\n                <option value='FJ'>Fiji</option>\n                <option value='FI'>Finland</option>\n                <option value='FR'>France</option>\n                <option value='GF'>French Guiana</option>\n                <option value='PF'>French Polynesia</option>\n                <option value='TF'>French Southern Territories</option>\n                <option value='GA'>Gabon</option>\n                <option value='GM'>Gambia</option>\n                <option value='GE'>Georgia</option>\n                <option value='DE'>Germany</option>\n                <option value='GH'>Ghana</option>\n                <option value='GI'>Gibraltar</option>\n                <option value='GR'>Greece</option>\n                <option value='GL'>Greenland</option>\n                <option value='GD'>Grenada</option>\n                <option value='GP'>Guadeloupe</option>\n                <option value='GU'>Guam</option>\n                <option value='GT'>Guatemala</option>\n                <option value='GN'>Guinea</option>\n                <option value='GW'>Guinea-Bissau</option>\n                <option value='GY'>Guyana</option>\n                <option value='HT'>Haiti</option>\n                <option value='HM'>Heard And Mc Donald Islands</option>\n                <option value='HN'>Honduras</option>\n                <option value='HK'>Hong Kong</option>\n                <option value='HU'>Hungary</option>\n                <option value='IS'>Iceland</option>\n                <option value='IN'>India</option>\n                <option value='ID'>Indonesia</option>\n                <option value='IR'>Iran (Islamic Republic Of)</option>\n                <option value='IQ'>Iraq</option>\n                <option value='IE'>Ireland</option>\n                <option value='IL'>Israel</option>\n                <option value='IT'>Italy</option>\n                <option value='JM'>Jamaica</option>\n                <option value='JP'>Japan</option>\n                <option value='JO'>Jordan</option>\n                <option value='KZ'>Kazakhstan</option>\n                <option value='KE'>Kenya</option>\n                <option value='KI'>Kiribati</option>\n                <option value='KP'>Korea, North</option>\n                <option value='KR'>Korea, Republic Of</option>\n                <option value='KW'>Kuwait</option>\n                <option value='KG'>Kyrgyzstan</option>\n                <option value='LA'>Lao People'S Democratic Republic</option>\n                <option value='LV'>Latvia</option>\n                <option value='LB'>Lebanon</option>\n                <option value='LS'>Lesotho</option>\n                <option value='LR'>Liberia</option>\n                <option value='LY'>Libyan Arab Jamahiriya</option>\n                <option value='LI'>Liechtenstein</option>\n                <option value='LT'>Lithuania</option>\n                <option value='LU'>Luxembourg</option>\n                <option value='MO'>Macau</option>\n                <option value='MK'>\n                  Macedonia, The Former Yugoslav Republic Of\n                </option>\n                <option value='MG'>Madagascar</option>\n                <option value='MW'>Malawi</option>\n                <option value='MY'>Malaysia</option>\n                <option value='MV'>Maldives</option>\n                <option value='ML'>Mali</option>\n                <option value='MT'>Malta</option>\n                <option value='MH'>Marshall Islands</option>\n                <option value='MQ'>Martinique</option>\n                <option value='MR'>Mauritania</option>\n                <option value='MU'>Mauritius</option>\n                <option value='YT'>Mayotte</option>\n                <option value='MX'>Mexico</option>\n                <option value='FM'>Micronesia, Federated States Of</option>\n                <option value='MD'>Moldova, Republic Of</option>\n                <option value='MC'>Monaco</option>\n                <option value='MN'>Mongolia</option>\n                <option value='ME'>Montenegro</option>\n                <option value='MS'>Montserrat</option>\n                <option value='MA'>Morocco</option>\n                <option value='MZ'>Mozambique</option>\n                <option value='MM'>Myanmar</option>\n                <option value='NA'>Namibia</option>\n                <option value='NR'>Nauru</option>\n                <option value='NP'>Nepal</option>\n                <option value='NL'>Netherlands</option>\n                <option value='AN'>Netherlands Antilles</option>\n                <option value='NC'>New Caledonia</option>\n                <option value='NZ'>New Zealand</option>\n                <option value='NI'>Nicaragua</option>\n                <option value='NE'>Niger</option>\n                <option value='NG'>Nigeria</option>\n                <option value='NU'>Niue</option>\n                <option value='NF'>Norfolk Island</option>\n                <option value='MP'>Northern Mariana Islands</option>\n                <option value='NO'>Norway</option>\n                <option value='OM'>Oman</option>\n                <option value='PK'>Pakistan</option>\n                <option value='PW'>Palau</option>\n                <option value='PS'>Palestinian Territory</option>\n                <option value='PA'>Panama</option>\n                <option value='PG'>Papua New Guinea</option>\n                <option value='PY'>Paraguay</option>\n                <option value='PE'>Peru</option>\n                <option value='PH'>Philippines</option>\n                <option value='PN'>Pitcairn</option>\n                <option value='PL'>Poland</option>\n                <option value='PT'>Portugal</option>\n                <option value='PR'>Puerto Rico</option>\n                <option value='QA'>Qatar</option>\n                <option value='RE'>Reunion</option>\n                <option value='RO'>Romania</option>\n                <option value='RU'>Russian Federation</option>\n                <option value='RW'>Rwanda</option>\n                <option value='SH'>Saint Helena</option>\n                <option value='KN'>Saint Kitts And Nevis</option>\n                <option value='LC'>Saint Lucia</option>\n                <option value='PM'>Saint Pierre And Miquelon</option>\n                <option value='VC'>Saint Vincent And The Grenadines</option>\n                <option value='WS'>Samoa</option>\n                <option value='SM'>San Marino</option>\n                <option value='ST'>Sao Tome And Principe</option>\n                <option value='SA'>Saudi Arabia</option>\n                <option value='SN'>Senegal</option>\n                <option value='RS'>Serbia</option>\n                <option value='SC'>Seychelles</option>\n                <option value='SL'>Sierra Leone</option>\n                <option value='SG'>Singapore</option>\n                <option value='SK'>Slovakia</option>\n                <option value='SI'>Slovenia</option>\n                <option value='SB'>Solomon Islands</option>\n                <option value='SO'>Somalia</option>\n                <option value='ZA'>South Africa</option>\n                <option value='GS'>\n                  South Georgia And The South Sandwich Islands\n                </option>\n                <option value='SS'>South Sudan</option>\n                <option value='ES'>Spain</option>\n                <option value='LK'>Sri Lanka</option>\n                <option value='SD'>Sudan</option>\n                <option value='SR'>Suriname</option>\n                <option value='SJ'>Svalbard And Jan Mayen Islands</option>\n                <option value='SZ'>Swaziland</option>\n                <option value='SE'>Sweden</option>\n                <option value='CH'>Switzerland</option>\n                <option value='SY'>Syrian Arab Republic</option>\n                <option value='TW'>Taiwan</option>\n                <option value='TJ'>Tajikistan</option>\n                <option value='TZ'>Tanzania, United Republic Of</option>\n                <option value='TH'>Thailand</option>\n                <option value='TL'>Timor-Leste</option>\n                <option value='TG'>Togo</option>\n                <option value='TK'>Tokelau</option>\n                <option value='TO'>Tonga</option>\n                <option value='TT'>Trinidad And Tobago</option>\n                <option value='TN'>Tunisia</option>\n                <option value='TR'>Turkey</option>\n                <option value='TM'>Turkmenistan</option>\n                <option value='TC'>Turks And Caicos Islands</option>\n                <option value='TV'>Tuvalu</option>\n                <option value='UG'>Uganda</option>\n                <option value='UA'>Ukraine</option>\n                <option value='AE'>United Arab Emirates</option>\n                <option value='GB'>United Kingdom</option>\n                <option value='US'>United States of America</option>\n                <option value='UM'>United States Minor Outlying Islands</option>\n                <option value='UY'>Uruguay</option>\n                <option value='UZ'>Uzbekistan</option>\n                <option value='VU'>Vanuatu</option>\n                <option value='VA'>Vatican City State (Holy See)</option>\n                <option value='VE'>Venezuela</option>\n                <option value='VN'>Viet Nam</option>\n                <option value='VG'>Virgin Islands (British)</option>\n                <option value='VI'>Virgin Islands (U.S.)</option>\n                <option value='WF'>Wallis And Futuna Islands</option>\n                <option value='EH'>Western Sahara</option>\n                <option value='YE'>Yemen</option>\n                <option value='ZM'>Zambia</option>\n                <option value='ZW'>Zimbabwe</option>\n              </select>\n            </label>\n\n            <label>\n              Bio\n              <textarea\n                className={bioError && 'form--error'}\n                name='bio'\n                onChange={onChange}\n                value={bio}\n              />\n              <Error error={bioError} />\n            </label>\n          </div>\n        </div>\n        <div className='form--body'>\n          <div>Account</div>\n          <div>\n            <label>\n              Email Address\n              <input\n                className={emailError && 'form--error'}\n                id='email'\n                name='email'\n                onBlur={onBlur}\n                onChange={onChange}\n                type='text'\n                value={email}\n              />\n              <Error error={emailError} />\n            </label>\n            <small>Email will not be publicly displayed.</small>\n\n            <label>Birthday</label>\n            <select\n              className='form--dob-year'\n              name='year'\n              onChange={onChange}\n              value={year}\n            >\n              <option value='0'>Year</option>\n              <option value='2019'>2019</option>\n              <option value='2018'>2018</option>\n              <option value='2017'>2017</option>\n              <option value='2016'>2016</option>\n              <option value='2015'>2015</option>\n              <option value='2014'>2014</option>\n              <option value='2013'>2013</option>\n              <option value='2012'>2012</option>\n              <option value='2011'>2011</option>\n              <option value='2010'>2010</option>\n              <option value='2009'>2009</option>\n              <option value='2008'>2008</option>\n              <option value='2007'>2007</option>\n              <option value='2006'>2006</option>\n              <option value='2005'>2005</option>\n              <option value='2004'>2004</option>\n              <option value='2003'>2003</option>\n              <option value='2002'>2002</option>\n              <option value='2001'>2001</option>\n              <option value='2000'>2000</option>\n              <option value='1999'>1999</option>\n              <option value='1998'>1998</option>\n              <option value='1997'>1997</option>\n              <option value='1996'>1996</option>\n              <option value='1995'>1995</option>\n              <option value='1994'>1994</option>\n              <option value='1993'>1993</option>\n              <option value='1992'>1992</option>\n              <option value='1991'>1991</option>\n              <option value='1990'>1990</option>\n              <option value='1989'>1989</option>\n              <option value='1988'>1988</option>\n              <option value='1987'>1987</option>\n              <option value='1986'>1986</option>\n              <option value='1985'>1985</option>\n              <option value='1984'>1984</option>\n              <option value='1983'>1983</option>\n              <option value='1982'>1982</option>\n              <option value='1981'>1981</option>\n              <option value='1980'>1980</option>\n              <option value='1979'>1979</option>\n              <option value='1978'>1978</option>\n              <option value='1977'>1977</option>\n              <option value='1976'>1976</option>\n              <option value='1975'>1975</option>\n              <option value='1974'>1974</option>\n              <option value='1973'>1973</option>\n              <option value='1972'>1972</option>\n              <option value='1971'>1971</option>\n              <option value='1970'>1970</option>\n              <option value='1969'>1969</option>\n              <option value='1968'>1968</option>\n              <option value='1967'>1967</option>\n              <option value='1966'>1966</option>\n              <option value='1965'>1965</option>\n              <option value='1964'>1964</option>\n              <option value='1963'>1963</option>\n              <option value='1962'>1962</option>\n              <option value='1961'>1961</option>\n              <option value='1960'>1960</option>\n              <option value='1959'>1959</option>\n              <option value='1958'>1958</option>\n              <option value='1957'>1957</option>\n              <option value='1956'>1956</option>\n              <option value='1955'>1955</option>\n              <option value='1954'>1954</option>\n              <option value='1953'>1953</option>\n              <option value='1952'>1952</option>\n              <option value='1951'>1951</option>\n              <option value='1950'>1950</option>\n              <option value='1949'>1949</option>\n              <option value='1948'>1948</option>\n              <option value='1947'>1947</option>\n              <option value='1946'>1946</option>\n              <option value='1945'>1945</option>\n              <option value='1944'>1944</option>\n              <option value='1943'>1943</option>\n              <option value='1942'>1942</option>\n              <option value='1941'>1941</option>\n              <option value='1940'>1940</option>\n              <option value='1939'>1939</option>\n              <option value='1938'>1938</option>\n              <option value='1937'>1937</option>\n              <option value='1936'>1936</option>\n              <option value='1935'>1935</option>\n              <option value='1934'>1934</option>\n              <option value='1933'>1933</option>\n              <option value='1932'>1932</option>\n              <option value='1931'>1931</option>\n              <option value='1930'>1930</option>\n              <option value='1929'>1929</option>\n              <option value='1928'>1928</option>\n              <option value='1927'>1927</option>\n              <option value='1926'>1926</option>\n              <option value='1925'>1925</option>\n              <option value='1924'>1924</option>\n              <option value='1923'>1923</option>\n              <option value='1922'>1922</option>\n              <option value='1921'>1921</option>\n              <option value='1920'>1920</option>\n              <option value='1919'>1919</option>\n              <option value='1918'>1918</option>\n              <option value='1917'>1917</option>\n              <option value='1916'>1916</option>\n              <option value='1915'>1915</option>\n              <option value='1914'>1914</option>\n              <option value='1913'>1913</option>\n              <option value='1912'>1912</option>\n              <option value='1911'>1911</option>\n              <option value='1910'>1910</option>\n              <option value='1909'>1909</option>\n              <option value='1908'>1908</option>\n              <option value='1907'>1907</option>\n              <option value='1906'>1906</option>\n              <option value='1905'>1905</option>\n              <option value='1904'>1904</option>\n              <option value='1903'>1903</option>\n              <option value='1902'>1902</option>\n              <option value='1901'>1901</option>\n              <option value='1900'>1900</option>\n            </select>\n            <select\n              className='form--dob-month'\n              name='month'\n              onChange={onChange}\n              value={month}\n            >\n              <option value='0'>Month</option>\n              <option value='1'>January</option>\n              <option value='2'>February</option>\n              <option value='3'>March</option>\n              <option value='4'>April</option>\n              <option value='5'>May</option>\n              <option value='6'>June</option>\n              <option value='7'>July</option>\n              <option value='8'>August</option>\n              <option value='9'>September</option>\n              <option value='10'>October</option>\n              <option value='11'>November</option>\n              <option value='12'>December</option>\n            </select>\n            <select\n              className={`form--dob-day ${dobError && 'form--error'}`}\n              name='day'\n              onChange={onChange}\n              value={day}\n            >\n              <option value='0'>Day</option>\n              <option value='1'>1</option>\n              <option value='2'>2</option>\n              <option value='3'>3</option>\n              <option value='4'>4</option>\n              <option value='5'>5</option>\n              <option value='6'>6</option>\n              <option value='7'>7</option>\n              <option value='8'>8</option>\n              <option value='9'>9</option>\n              <option value='10'>10</option>\n              <option value='11'>11</option>\n              <option value='12'>12</option>\n              <option value='13'>13</option>\n              <option value='14'>14</option>\n              <option value='15'>15</option>\n              <option value='16'>16</option>\n              <option value='17'>17</option>\n              <option value='18'>18</option>\n              <option value='19'>19</option>\n              <option value='20'>20</option>\n              <option value='21'>21</option>\n              <option value='22'>22</option>\n              <option value='23'>23</option>\n              <option value='24'>24</option>\n              <option value='25'>25</option>\n              <option value='26'>26</option>\n              <option value='27'>27</option>\n              <option value='28'>28</option>\n              <option value='29'>29</option>\n              <option value='30'>30</option>\n              <option value='31'>31</option>\n            </select>\n\n            <label>Gender</label>\n            <label className='form--radio-label'>\n              <input\n                checked={gender === 'male'}\n                id='male'\n                name='gender'\n                onChange={onChange}\n                type='radio'\n              />\n              <span>Male</span>\n            </label>\n            <label className='form--radio-label'>\n              <input\n                checked={gender === 'female'}\n                id='female'\n                name='gender'\n                onChange={onChange}\n                type='radio'\n              />\n              <span>Female</span>\n            </label>\n            <label className='form--radio-label'>\n              <input\n                checked={gender === 'other'}\n                id='other'\n                name='gender'\n                onChange={onChange}\n                type='radio'\n              />\n              <span>Other</span>\n            </label>\n          </div>\n        </div>\n        <div className='form--footer'>\n          <small></small>\n          <div>\n            <button color='primary'>\n              {!loading ? (\n                'Save Changes'\n              ) : (\n                <img src={loadingImg} alt='loading' className='loading' />\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    </span>\n  );\n};\n\nexport { Settings };\n","import React from 'react';\n\nconst NotFound: React.FC = () => {\n  return (\n  <div>notFound</div>\n  );\n};\n\nexport { NotFound };\n","import React, { useContext, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Dispatch, SET_MODAL } from '../globalState';\n\ninterface ConfirmProps extends RouteComponentProps<{ resetPassword: string }> {}\n\nconst ResetPassword: React.FC<ConfirmProps> = (props: ConfirmProps) => {\n  const { dispatch } = useContext(Dispatch);\n\n  const resetPassword = props.match.params.resetPassword;\n  localStorage.setItem('resetCode', resetPassword);\n  useEffect(() => {\n    dispatch({ type: SET_MODAL, value: 'resetpassword' });\n  }, [dispatch]);\n\n  return <div className='page'></div>;\n};\n\nexport { ResetPassword };\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line: no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // tslint:disable-next-line: no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // tslint:disable-next-line: no-console\n              console.log('Content is cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // tslint:disable-next-line: no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  fetch(swUrl)\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line: no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from './Router';\nimport './scss/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React, { useReducer } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Layout } from './components/layout';\nimport { Dispatch, Global, InitialState, Reducer } from './globalState';\nimport { ConfirmEmail } from './routes/confirmEmail';\nimport { Home } from './routes/home';\nimport { Password } from './routes/my/password';\nimport { Preferences } from './routes/my/preferences';\nimport { Profile } from './routes/my/profile';\nimport { Settings } from './routes/my/settings';\nimport { NotFound } from './routes/notFound';\nimport { ResetPassword } from './routes/resetPassword';\n\nconst Router: React.FC = () => {\n  const [global, dispatch] = useReducer(Reducer, InitialState);\n  return (\n    <Dispatch.Provider value={{ dispatch }}>\n      <Global.Provider value={{ global }}>\n        <BrowserRouter>\n          <Route\n            render={({ location }) => (\n              <Layout location={location}>\n                <Switch location={location}>\n                  <Route exact path='/' component={Home} />\n                  <Route exact path='/my/profile' component={Settings} />\n                  <Route exact path='/my/password' component={Password} />\n                  <Route exact path='/my/preferences' component={Preferences} />\n                  <Route exact path='/confirm-email/:confirmationCode' component={ConfirmEmail} />\n                  <Route exact path='/reset-password/:resetPassword' component={ResetPassword} />\n                  <Route exact path='/:username' component={Profile} />\n                  <Route component={NotFound} />\n                </Switch>\n              </Layout>\n            )}\n          />\n        </BrowserRouter>\n      </Global.Provider>\n    </Dispatch.Provider>\n  );\n};\n\nexport { Router };\n","module.exports = __webpack_public_path__ + \"static/media/loading.6a19979e.svg\";"],"sourceRoot":""}